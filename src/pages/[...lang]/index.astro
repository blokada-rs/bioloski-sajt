---
import Base from "@layouts/Base.astro";
import { collection, file, langs } from "@scripts/i18n";
import { getImage } from "astro:assets";

import { SITE_DESCRIPTION } from "../../consts";
import heroBg from "@assets/images/hero-bg.jpg";
import Live from "@components/Live.astro";
import Slider from "../../components/Slider.astro";
import Card from "../../components/Card.astro";

export async function getStaticPaths() {
  return langs.map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params;
if (typeof lang === "undefined") {
  return Astro.rewrite(`/sr${Astro.url.pathname}`);
}

const { Content: Pocetna, frontmatter: pocetna } = await file("pocetna", lang);
const { Content: Zahtevi } = await file("zahtevi", lang);
const { frontmatter } = await file("ostalo", lang);
const live = (await collection("vesti", lang)).find((vest) => vest.data.live);
const optimizedBackground = await getImage({ src: heroBg, format: "avif" });

const vesti = await collection("vesti", lang);
---

<Base
  {lang}
  title={frontmatter.naslov}
  description={SITE_DESCRIPTION}
  image={heroBg.src}
>
  <div
    class="title full-width"
    style={`background-image: url(${optimizedBackground.src});`}
  >
    {typeof live !== "undefined" &&
      <Live href={`/${lang}/vesti/${live.id}`}>{live.data.title}</Live>
    }

    <h1>{frontmatter.naslov}</h1>
  </div>

  <section>
    <Pocetna />
  </section>

  <section class="gap">
    <h2>{pocetna.vesti}</h2>
    {pocetna.vesti_tekst && <p class="section-subtitle">{pocetna.vesti_tekst}</p>}
    <Slider>
      {vesti.slice(0, 3).map(post =>
        <Card link=`/${lang}/vesti/${post.id}` {...post} />)
      }
      <a slot="button" href=`/${lang}/vesti` class="button primary dugme">{pocetna.vesti_dugme}</a>
    </Slider>
  </section>

  <div class="dark-background full-width">
    <section>
      <Zahtevi />
      <div class="buttons">
        <a slot="button" href=`https://blokade.org/${lang}/zahtevi` class="button primary dugme center">{pocetna.konkretizacije_zahteva}</a>
      </div>
    </section>
  </div>
</Base>

<style>
  .title {
    position: relative;
    background-size: cover;
    background-position: center;
    height: 20rem;

    display: flex;
    align-items: center;
  }

  .title::before {
    content: "";
    position: absolute;
    background-color: rgba(0, 0, 0, 0.4);
    inset: 0;
    z-index: 0;
  }

  .title h1 {
    margin-inline: auto;
    padding-inline: 2rem;
    color: white;
    z-index: 1;
    font-size: 5rem;
    text-align: center;
  }

  section :global(ol) {
    padding-inline-start: 4rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  section :global(ol) :global(::marker) {
    font-size: 3rem;
    font-weight: 700;
    line-height: 1;
  }

  section :global(h2) {
    border-left: 0.4rem var(--accent) solid;
    padding-left: 0.8rem;
  }

  @media (max-width: 720px) {
    .title h1 {
      padding-inline: 2vw;
      font-size: 13vw;
    }
  }

  .title .live {
    position: absolute;
    top: 2rem;
    left: 2rem;
  }

  .gap {
    display: flex;
    flex-direction: column;
    align-items: start;
  }

  .dugme {
    padding: 1rem 2rem;
    border-radius: 0.5rem;
  }

  .buttons {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
  }

  .dark-background {
    background-color: hsl(0, 0%, 95%);
    padding-block: 3rem;
  }
</style>
